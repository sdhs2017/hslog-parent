<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jz.bigdata.roleauthority.menu.dao.IMenuDao">
	<!-- 返回结果设置 -->
	<resultMap id="BaseResultMap"
		type="com.jz.bigdata.roleauthority.menu.entity.Menu">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="menuName" jdbcType="VARCHAR" property="menuName" />
		<result column="superiorId" jdbcType="VARCHAR" property="superiorId" />
		<result column="childId" jdbcType="INTEGER" property="childId" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="icon" jdbcType="VARCHAR" property="icon" />
		<result column="state" jdbcType="VARCHAR" property="state" />
		<result column="fk_system_id" jdbcType="VARCHAR" property="fk_system_id" />
		<result column="systemName" jdbcType="VARCHAR" property="systemName" />
	</resultMap>
	<resultMap id="ButtonBaseResultMap"
			   type="com.jz.bigdata.roleauthority.menu.entity.Button">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="buttonName" jdbcType="VARCHAR" property="buttonName" />
		<result column="buttonID" jdbcType="VARCHAR" property="buttonID" />
		<result column="pk_menu_id" jdbcType="INTEGER" property="pk_menu_id" />
	</resultMap>

	<!-- 查询字段设置可重复调用 -->
	<!-- id,name:部门名称,level:部门层级,superiorId:上级id, -->
	<sql id="Base_Column_List">
		id, menuName, superiorId, childId, url,icon,state,systemName
	</sql>
	
	
		
	<select id="getEntity" parameterType="java.lang.String" resultMap="BaseResultMap" >
		select id, menuName, superiorId, childId, url,icon,state,fk_system_id
		from HS_Menu
		where id=#{id}
	</select>
	<!-- 查询所有数据 -->
	<select id="selectSystem" parameterType="java.lang.String" resultMap="BaseResultMap"  >
		select sys.id as id,sys_name as systemName,sys.icon
		from HS_Menu menu
		left join HS_RoleMenuButton rm on rm.fk_menuAndButon_id = menu.id
		left join HS_System sys on sys.id = menu.fk_system_id
		left join HS_UserRole ur on ur.FK_RoleID = rm.fk_roleid
		left join HS_User u on u.id = ur.FK_UserID
		where  u.id=#{userID}  and rm.fk_menuAndButon_id is not null
		group by sys.id,sys_name
		order by `order`
	</select>

	<!-- 查询所有数据 -->
	<select id="selectMenu" parameterType="java.lang.String" resultMap="BaseResultMap"  >
		select menu.id, menu.menuName, menu.superiorId, menu.childId, menu.url,menu.icon,menu.state,sys.sys_name as systemName
		from HS_Menu menu
		left join HS_RoleMenuButton rm on rm.fk_menuAndButon_id = menu.id
		left join HS_System sys on sys.id = menu.fk_system_id
		left join HS_UserRole ur on ur.FK_RoleID = rm.fk_roleid
		left join HS_User u on u.id = ur.FK_UserID
		where  u.id=#{userID}  and sys.id = #{systemID} and rm.fk_menuAndButon_id is not null and menu.state='1'
		group by menu.id, menu.menuName, menu.superiorId, menu.childId, menu.url,menu.icon,menu.state,sys.sys_name
	</select>
	<!-- 查询所有按钮 -->
	<select id="selectButton" parameterType="java.lang.String" resultMap="BaseResultMap"  >
		select menu.id, menu.menuName, menu.superiorId, menu.childId, menu.url,menu.icon,menu.state,sys.sys_name as systemName
		from HS_Button hb
		LEFT JOIN  HS_Menu menu ON menu.id=hb.pk_menu_id
		left join HS_RoleMenuButton rm on rm.fk_menuAndButon_id = menu.id
		left join HS_System sys on sys.id = menu.fk_system_id
		left join HS_UserRole ur on ur.FK_RoleID = rm.fk_roleid
		left join HS_User u on u.id = ur.FK_UserID
		where  u.id=#{userID}  and sys.id = #{systemID} and rm.fk_menuAndButon_id is not null
	</select>
	<!--通过系统id获取菜单信息 -->
	<select id="selectMenuBySysID" parameterType="java.lang.String" resultMap="BaseResultMap"  >
		select menu.id, menu.menuName, menu.superiorId, menu.childId, menu.url,menu.icon,menu.state,sys.sys_name as systemName
		from HS_Menu menu
		left join HS_System sys on sys.id = menu.fk_system_id

		where  sys.id = CASE WHEN (#{systemID} IS NULL OR #{systemID}='') THEN sys.id ELSE #{systemID} END


	</select>
	<!-- 插入数据-->
	<insert id="insert" parameterType="com.jz.bigdata.roleauthority.menu.entity.Menu">
		insert into HS_Menu
		<!--     格式化 -->
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<!--     判断参数是否为空 -->
			<if test="id != null">
				id,
			</if>
			<if test="menuName != null">
				menuName,
			</if>
			<if test="superiorId != null">
				superiorId,
			</if>
			<if test="childId != null">
				childId,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="icon !=null">
				icon,
			</if>
			<if test="state != null ">
				state,
			</if>
			<if test="fk_system_id != null ">
				fk_system_id
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="menuName != null">
				#{menuName,jdbcType=VARCHAR},
			</if>
			<if test="superiorId != null">
				#{superiorId,jdbcType=VARCHAR},
			</if>
			<if test="childId != null">
				#{childId,jdbcType=INTEGER},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="icon !=null">
				#{icon,jdbcType=VARCHAR},
			</if>
			<if test="state != null and state != ''">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="fk_system_id != null and fk_system_id != ''">
				#{fk_system_id,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	<!-- 更新数据-->
	<update id="update" parameterType="com.jz.bigdata.roleauthority.menu.entity.Menu">
		update HS_Menu set menuName=#{menuName},childId=#{childId},
		<if test="superiorId != null ">
			superiorId=#{superiorId},
		</if>
		<if test="url != null ">
			url=#{url},
		</if>
		<if test="icon != null ">
			icon=#{icon},
		</if>
		state=#{state},fk_system_id=#{fk_system_id}
		where id=#{id}
	</update>
	<!-- 删除数据-->
	<delete id="delete" parameterType="java.lang.String">
		delete from HS_Menu
		where id=#{id}
	</delete>
	<insert id="insertButton" parameterType="java.lang.String">
		insert into HS_Button (id,buttonName,buttonID,pk_menu_id) values(UUID(),#{name},#{id},#{menuid})
	</insert>

	<delete id="deleteButtonByMenuID" parameterType="java.lang.String">
		delete from HS_Button
		where pk_menu_id=#{menuid}
	</delete>
	<select id="selectButtonByMenuID" parameterType="java.lang.String" resultMap="ButtonBaseResultMap"  >
		select id,buttonName,buttonID,pk_menu_id
		from HS_Button
		where pk_menu_id = #{pk_menu_id}
	</select>
	<select id="selectSystemMenu" resultMap="BaseResultMap" >
		SELECT menu.id, menu.menuName, CASE WHEN(menu.superiorId IS NULL OR menu.superiorId='') THEN S.id ELSE menu.superiorId END superiorId, menu.childId
		FROM HS_Menu menu
		LEFT JOIN HS_System S ON S.id = menu.fk_system_id where menu.state='1'
		UNION
		SELECT ID,sys_name AS menuName,'' as superiorId,0 as childId
		from HS_System

	</select>
	<select id="selectSystemMenuByIDs"  resultMap="BaseResultMap" >
		select *from (
		SELECT menu.id, menu.menuName, CASE WHEN(menu.superiorId IS NULL OR menu.superiorId='') THEN S.id ELSE menu.superiorId END superiorId, menu.childId
		FROM HS_Menu menu
		LEFT JOIN HS_System S ON S.id = menu.fk_system_id
		UNION
		SELECT ID,sys_name AS menuName,'' as superiorId,0 as childId
		from HS_System

		) as s where id  in
		<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
		UNION
		select id,buttonName,pk_menu_id as superiorId,0 as childId from HS_Button
		 where pk_menu_id in
		<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>
	<insert id="insertMenuButton" parameterType="java.lang.String">
		insert into HS_RoleMenuButton(fk_menuAndButon_id,fk_roleid) values(#{menuAndButtonID},#{fk_roleid})
	</insert>
	<delete id="deleteMenuButtonByRoleID" parameterType="java.lang.String">
		delete from HS_RoleMenuButton
		where fk_roleid=#{fk_roleid}
	</delete>
	<select id="selectButtonListByUser" parameterType="java.lang.String" resultMap="ButtonBaseResultMap">
		select hb.buttonID,hb.buttonName,hb.pk_menu_id
		from HS_User hu
		left join HS_UserRole hur on hur.FK_UserID = hu.id
		left join HS_RoleMenuButton hrmb on hrmb.fk_roleid = hur.FK_RoleID
		left join HS_Button hb on hb.id = hrmb.fk_menuAndButon_id
		where hb.id is not NULL and hu.id=#{userID}
		group by hb.buttonID,hb.buttonName,hb.pk_menu_id
	</select>

	<select id="selectExistParentMenuById" parameterType="java.lang.String">
		select count(1) as num from HS_Menu where id=#{id} and (superiorid is null or superiorid='')
	</select>
</mapper>