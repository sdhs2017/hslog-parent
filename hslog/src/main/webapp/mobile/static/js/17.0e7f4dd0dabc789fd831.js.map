{"version":3,"sources":["webpack:///src/components/flowManage/portFlow.vue","webpack:///./src/components/flowManage/portFlow.vue?d1f1","webpack:///./src/components/flowManage/portFlow.vue"],"names":["portFlow","name","data","interTime","refreshIntTime","dataTime","targetPortFlowData","baseConfig","title","xAxisName","yAxisName","rotate","itemColor","xAxisArr","yAxisArr","targetPortFlowData2","hoverText","TCPPortFlowData","TCPPortFlowData2","UDPPortFlowData","UDPPortFlowData2","created","_this","this","bus","$on","val","clearInterval","setInterFun","mounted","getTargetPortFlowData","getTCPPortFlowData","getUDPPortFlowData","methods","_this2","$nextTick","$post","timeInterval","then","res","xns1","yvs1","yvs2","i","obj","j","push","value","catch","err","_this3","_this4","_this5","setInterval","beforeRouteEnter","to","from","next","vm","beforeRouteLeave","components","vFlowchartfrom","flowChartsFrom","vEcharts","echarts","flowManage_portFlow","render","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","refreshBus","dataBus","echartType","echartData","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/17.0e7f4dd0dabc789fd831.js","sourcesContent":["<template>\n    <div class=\"content-bg\">\n        <div class=\"top-title\">端口流量\n            <v-flowchartfrom class=\"from-wapper\" refreshBus=\"portFlowRefreshBus\" dataBus=\"portFlowDataBus\"></v-flowchartfrom>\n        </div>\n        <div class=\"item-wapper\">\n          <div class=\"item-title\">目的端口总流量</div>\n          <div class=\"item-content\">\n            <v-echarts echartType=\"bar\" :echartData = \"this.targetPortFlowData\" ></v-echarts>\n          </div>\n        </div>\n        <div class=\"item-wapper\">\n          <div class=\"item-title\">目的端口总流量</div>\n          <div class=\"item-content\">\n            <v-echarts echartType=\"pie\" :echartData = \"this.targetPortFlowData2\" ></v-echarts>\n          </div>\n        </div>\n        <div class=\"item-wapper\">\n          <div class=\"item-title\">TCP目的端口总流量</div>\n          <div class=\"item-content\">\n            <v-echarts echartType=\"bar\" :echartData = \"this.TCPPortFlowData\" ></v-echarts>\n          </div>\n        </div>\n        <div class=\"item-wapper\">\n          <div class=\"item-title\">TCP目的端口总流量</div>\n          <div class=\"item-content\">\n            <v-echarts echartType=\"pie\" :echartData = \"this.TCPPortFlowData2\" ></v-echarts>\n          </div>\n        </div>\n        <div class=\"item-wapper\">\n          <div class=\"item-title\">UDP目的端口总流量</div>\n          <div class=\"item-content\">\n            <v-echarts echartType=\"bar\" :echartData = \"this.UDPPortFlowData\" ></v-echarts>\n          </div>\n        </div>\n        <div class=\"item-wapper\">\n          <div class=\"item-title\">UDP目的端口总流量</div>\n          <div class=\"item-content\">\n            <v-echarts echartType=\"pie\" :echartData = \"this.UDPPortFlowData2\" ></v-echarts>\n          </div>\n        </div>\n    </div>\n    \n</template>\n\n<script>\n    import vFlowchartfrom from '../common/flowChartsFrom'\n    import vEcharts from '../common/echarts'\n    import bus from '../common/bus';\n    import {dateFormat} from '../../../static/js/common'\n    export default {\n        name: \"portFlow\",\n        data() {\n            return {\n                interTime:'',\n                //刷新时间间隔\n                refreshIntTime :'5000',\n                //数据日期间隔\n                dataTime:3600,\n                //目的端口总流量\n                targetPortFlowData:{\n                    baseConfig:{\n                        title:'',\n                        xAxisName:'端口',\n                        yAxisName:'数据包/个',\n                        rotate:'25',\n                        itemColor:['rgba(68,47,148,0.5)','rgba(15,219,243,1)']\n                    },\n                    xAxisArr:[],\n                    yAxisArr:[]\n                },\n                targetPortFlowData2:{\n                    baseConfig:{\n                        title:'',\n                        hoverText:'百分比'\n                    },\n                    xAxisArr:[],\n                    yAxisArr:[]\n                },\n                //TCP端口总流量\n                TCPPortFlowData:{\n                    baseConfig:{\n                        title:'',\n                        xAxisName:'端口',\n                        yAxisName:'数据包/个',\n                        rotate:'25',\n                        itemColor:['rgba(68,47,148,0.5)','rgba(15,219,243,1)']\n                    },\n                    xAxisArr:[],\n                    yAxisArr:[]\n                },\n                TCPPortFlowData2:{\n                    baseConfig:{\n                        title:'',\n                        hoverText:'百分比'\n                    },\n                    xAxisArr:[],\n                    yAxisArr:[]\n                },\n                //TCP端口总流量\n                UDPPortFlowData:{\n                    baseConfig:{\n                        title:'',\n                        xAxisName:'端口',\n                        yAxisName:'数据包/个',\n                        rotate:'25',\n                        itemColor:['rgba(68,47,148,0.5)','rgba(15,219,243,1)']\n                    },\n                    xAxisArr:[],\n                    yAxisArr:[]\n                },\n                UDPPortFlowData2:{\n                    baseConfig:{\n                        title:'',\n                        hoverText:'百分比'\n                    },\n                    xAxisArr:[],\n                    yAxisArr:[]\n                }\n            }\n        },\n        created(){\n            /*监听刷新时间改变*/\n            bus.$on('portFlowRefreshBus',(val)=>{\n                    this.refreshIntTime = val;\n                    clearInterval(this.interTime);\n                    this.setInterFun();\n            })\n            /*监听数据时间改变*/\n            bus.$on('portFlowDataBus',(val)=>{\n                this.dataTime = val;\n            })\n\n        },\n        mounted(){\n            //第一次获取数据\n            /*获取目的端口总流量*/\n            this.getTargetPortFlowData(this.dataTime);\n            /*获取TCP端口总流量*/\n            this.getTCPPortFlowData(this.dataTime);\n            /*获取UDP端口总流量*/\n            this.getUDPPortFlowData(this.dataTime);\n\n        },\n        methods:{\n            /*获取目的端口总流量*/\n            getTargetPortFlowData(dataTime){\n                this.$nextTick(()=>{\n\n                    this.$post('/flow/getDstPortCount.do',{\n                      timeInterval:dataTime\n                    })\n                        .then(res=>{\n                            let xns1 = [];\n                            let yvs1 = [];\n                            let yvs2 = [];\n                            for(let i in res){\n                              let obj = res[i];\n                              for (let j in obj){\n                                xns1.push(j);\n                                yvs1.push(obj[j]);\n                                yvs2.push({\n                                  name:j,\n                                  value:obj[j]\n                                })\n                              }\n                            }\n                            this.targetPortFlowData.xAxisArr = xns1;\n                            this.targetPortFlowData.yAxisArr = yvs1;\n                            this.targetPortFlowData2.yAxisArr = yvs2;\n                        })\n                        .catch(err=>{\n\n                        })\n                })\n            },\n            /*获取TCP目的端口总流量*/\n            getTCPPortFlowData(dataTime){\n                this.$nextTick(()=>{\n\n                    this.$post('/flow/getTCPDstPortCount.do',{\n                      timeInterval:dataTime\n                    })\n                        .then(res=>{\n                            let xns1 = [];\n                            let yvs1 = [];\n                            let yvs2 = [];\n                            for(let i in res){\n                              let obj = res[i];\n                              for (let j in obj){\n                                xns1.push(j);\n                                yvs1.push(obj[j]);\n                                yvs2.push({\n                                  name:j,\n                                  value:obj[j]\n                                })\n                              }\n                            }\n                            this.TCPPortFlowData.xAxisArr = xns1;\n                            this.TCPPortFlowData.yAxisArr = yvs1;\n                            this.TCPPortFlowData2.yAxisArr = yvs2;\n                        })\n                        .catch(err=>{\n\n                        })\n                })\n            },\n            /*获取UDP端口总流量*/\n            getUDPPortFlowData(dataTime){\n                this.$nextTick(()=>{\n                    this.$post('/flow/getUDPDstPortCount.do',{\n                      timeInterval:dataTime\n                    })\n                        .then(res=>{\n                            let xns1 = [];\n                            let yvs1 = [];\n                            let yvs2 = [];\n                            for(let i in res){\n                              let obj = res[i];\n                              for (let j in obj){\n                                xns1.push(j);\n                                yvs1.push(obj[j]);\n                                yvs2.push({\n                                  name:j,\n                                  value:obj[j]\n                                })\n                              }\n                            }\n                            this.UDPPortFlowData.xAxisArr = xns1;\n                            this.UDPPortFlowData.yAxisArr = yvs1;\n                            this.UDPPortFlowData2.yAxisArr = yvs2;\n                        })\n                        .catch(err=>{\n\n                        })\n                })\n            },\n            /*计时器*/\n            setInterFun(){\n              /*循环获取数据*/\n              this.interTime = setInterval(()=>{\n                /*获取目的端口总流量*/\n                this.getTargetPortFlowData(this.dataTime);\n                /*获取TCP端口总流量*/\n                this.getTCPPortFlowData(this.dataTime);\n                /*获取UDP端口总流量*/\n                this.getUDPPortFlowData(this.dataTime);\n              },this.refreshIntTime);\n            }\n        },\n        beforeRouteEnter(to, from, next){\n          next(vm => {\n            vm.setInterFun();\n          });\n        },\n        beforeRouteLeave(to, from, next) {\n          clearInterval(this.interTime);\n          next();\n        },\n        components:{\n            vFlowchartfrom,\n            vEcharts\n        }\n    }\n</script>\n\n<style scoped>\n  .content-bg{\n    /*height: 1000px;*/\n    font-size: 1rem;\n    background: url(\"../../../static/img/flow-index-bg2.png\");\n    background-size: 100% 100%;\n  }\n  .top-title{\n    font-size: 0.5rem;\n    color: #185bff;\n    padding: 10px;\n  }\n  .item-wapper{\n    height: auto;\n    /*background: rgb(26,36,47);*/\n    background: url(\"../../../static/img/bd2.png\");\n    background-size: 100% 100%;\n    margin:0.5rem 0.2rem;\n  }\n  .item-title{\n    height: 1rem;\n    line-height: 1rem;\n    font-size: 0.38rem;\n    text-align: left;\n    padding-left: 25px;\n    /*background: url(\"../../../static/img/title-bg.png\");*/\n    background-size: 100% 100%;\n  }\n  .item-content{\n    /*height: calc(100% - 1rem);*/\n    height: 230px;\n    box-sizing: border-box;\n    padding: 0.5rem;\n    padding-top: 0;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/flowManage/portFlow.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content-bg\"},[_c('div',{staticClass:\"top-title\"},[_vm._v(\"端口流量\\n        \"),_c('v-flowchartfrom',{staticClass:\"from-wapper\",attrs:{\"refreshBus\":\"portFlowRefreshBus\",\"dataBus\":\"portFlowDataBus\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"目的端口总流量\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"bar\",\"echartData\":this.targetPortFlowData}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"目的端口总流量\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"pie\",\"echartData\":this.targetPortFlowData2}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"TCP目的端口总流量\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"bar\",\"echartData\":this.TCPPortFlowData}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"TCP目的端口总流量\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"pie\",\"echartData\":this.TCPPortFlowData2}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"UDP目的端口总流量\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"bar\",\"echartData\":this.UDPPortFlowData}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"UDP目的端口总流量\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"pie\",\"echartData\":this.UDPPortFlowData2}})],1)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-458bbb47\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/flowManage/portFlow.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-458bbb47\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./portFlow.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./portFlow.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./portFlow.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-458bbb47\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./portFlow.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-458bbb47\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/flowManage/portFlow.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}