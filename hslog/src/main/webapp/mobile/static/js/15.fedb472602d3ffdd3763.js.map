{"version":3,"sources":["webpack:///src/components/flowManage/realTimeFlow.vue","webpack:///./src/components/flowManage/realTimeFlow.vue?e311","webpack:///./src/components/flowManage/realTimeFlow.vue"],"names":["realTimeFlow","name","data","interTime","refreshObj","defaultVal","opt","label","value","refreshIntTime","dataTime","bandwidth","bandwidthArr","allUsedData","baseConfig","title","xAxisName","yAxisName","hoverText","yAxisArr","color","allUsedData2","allPacketsData","created","_this","this","bus","$on","val","clearInterval","setInterFun","mounted","endtime","Object","common","Date","st","valueOf","getAllUsedData","getAllPacketsData","methods","timeInterval","_this2","$nextTick","$post","then","res","toFixed","length","push","shift","catch","err","_this3","_this4","setInterval","beforeRouteEnter","to","from","next","vm","beforeRouteLeave","components","vFlowchartfrom","flowChartsFrom","vEcharts","echarts","flowManage_realTimeFlow","render","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","refreshBus","staticStyle","width","placeholder","size","model","callback","$$v","expression","_l","item","key","echartType","echartData","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/15.fedb472602d3ffdd3763.js","sourcesContent":["<template>\n    <div class=\"content-bg\">\n      <div class=\"top-title\">全局实时流量\n        <v-flowchartfrom class=\"from-wapper\" refreshBus=\"realTimeFlowRefreshBus\" :refreshObj=\"refreshObj\"></v-flowchartfrom>\n      </div>\n      <div class=\"item-wapper\">\n        <div class=\"item-title\">全局-利用率百分比</div>\n        <div class=\"chart-from\">\n          <span >带宽：</span>\n          <el-select v-model=\"bandwidth\" placeholder=\"请选择\" size=\"mini\" style=\"width: 80px;\">\n            <el-option\n              v-for=\"item in bandwidthArr\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </div>\n        <div class=\"item-content\">\n          <v-echarts echartType=\"timeline\" :echartData = \"this.allUsedData\" ></v-echarts>\n        </div>\n        <div class=\"item-content\">\n          <v-echarts echartType=\"gauge\" :echartData = \"this.allUsedData2\" ></v-echarts>\n        </div>\n      </div>\n      <div class=\"item-wapper\">\n        <div class=\"item-title\">全局数据包个数</div>\n        <div class=\"item-content\">\n          <v-echarts echartType=\"timeline\" :echartData = \"this.allPacketsData\" ></v-echarts>\n        </div>\n      </div>\n    </div>\n    \n</template>\n\n<script>\n    import vFlowchartfrom from '../common/flowChartsFrom'\n    import vEcharts from '../common/echarts'\n    import bus from '../common/bus';\n    import {dateFormat} from '../../../static/js/common'\n    export default {\n        name: \"realTimeFlow\",\n        data() {\n            return {\n                interTime:'',\n                refreshObj:{\n                  defaultVal:'5',\n                  opt:[{\n                    label:'5s',\n                    value:'5'\n                  },\n                    {\n                      label:'10s',\n                      value:'10'\n                    },\n                    {\n                      label:'20s',\n                      value:'20'\n                    }\n                  ]\n                },\n                //刷新时间间隔\n                refreshIntTime :'5000',\n                //数据日期间隔\n                dataTime:1,\n                //全局利用率百分比\n                bandwidth:10,\n                bandwidthArr:[\n                    {\n                        label:'10M',\n                        value:10\n                    },\n                    {\n                        label:'100M',\n                        value:100\n                    },\n                    {\n                        label:'1000M',\n                        value:1000\n                    }\n                ],\n                allUsedData:{\n                    baseConfig:{\n                        title:'',\n                        xAxisName:'时间',\n                        yAxisName:'百分比/%',\n                        hoverText:'',\n                    },\n                    yAxisArr:[{\n                        name:'',\n                        color:'rgb(15,219,243)',\n                        data:[]\n                    }]\n                },\n                allUsedData2:{\n                    baseConfig:{\n                        title:'',\n                        xAxisName:'',\n                        yAxisName:'',\n                        hoverText:'全局',\n                    },\n                    yAxisArr:[{\n                        name:'利用率',\n                        data:[/*{value: 10, name: '利用率'}*/]\n                    }]\n                },\n                //全局数据包个数\n                allPacketsData:{\n                    baseConfig:{\n                        title:'',\n                        xAxisName:'时间',\n                        yAxisName:'个数/个',\n                        hoverText:'',\n                    },\n                    yAxisArr:[{\n                        name:'',\n                        color:'rgb(15,219,243)',\n                        data:[]\n                    }]\n                }\n            }\n        },\n        created(){\n            /*监听刷新时间改变*/\n            bus.$on('realTimeFlowRefreshBus',(val)=>{\n                    this.refreshIntTime = val*1000;\n                    clearInterval(this.interTime);\n                    this.setInterFun();\n            })\n            /*监听数据时间改变*/\n            bus.$on('realTimeFlowDataBus',(val)=>{\n                this.dataTime = val;\n            })\n\n        },\n        mounted(){\n            //第一次获取数据\n            let endtime = dateFormat('yyyy-mm-dd HH:MM:SS',new Date());\n            let st = new Date(new Date(endtime).valueOf() - this.dataTime * 60 * 60 * 1000);\n            let starttime = dateFormat('yyyy-mm-dd HH:MM:SS',st);\n            /*获取全局利用率百分比*/\n            this.getAllUsedData(this.refreshIntTime/1000);\n            /*获取全局数据包个数*/\n            this.getAllPacketsData(this.refreshIntTime/1000);\n            /*循环获取数据*/\n\n        },\n        methods:{\n            /*获取全局利用率百分比*/\n            getAllUsedData(timeInterval){\n                this.$nextTick(()=>{\n                    this.$post('/flow/getPacketLengthPerSecond.do',{\n                      timeInterval:timeInterval\n                    })\n                        .then(res=>{\n                            res[0].value[1] = res[0].value[1] * 8 * 1000 * 100/ this.refreshIntTime / this.bandwidth / 1024;\n                            res[0].value[1] = res[0].value[1].toFixed(2);\n                            if(this.allUsedData.yAxisArr[0].data.length < 60){\n                                this.allUsedData.yAxisArr[0].data.push(res[0])\n                            }else{\n                                this.allUsedData.yAxisArr[0].data.shift();\n                                this.allUsedData.yAxisArr[0].data.push(res[0])\n                            }\n                            this.allUsedData2.yAxisArr[0].data=[{\n                                value:res[0].value[1],\n                                name:'利用率'\n                            }]\n                        })\n                        .catch(err=>{\n\n                        })\n                })\n            },\n            /*获取全局数据包个数*/\n            getAllPacketsData(timeInterval){\n                this.$nextTick(()=> {\n                    this.$post( '/flow/getPacketCount.do',{\n                      timeInterval:timeInterval\n                    })\n                        .then(res => {\n                            if (this.allPacketsData.yAxisArr[0].data.length < 60) {\n                                this.allPacketsData.yAxisArr[0].data.push(res[0]);\n                            } else {\n                                this.allPacketsData.yAxisArr[0].data.shift();\n                                this.allPacketsData.yAxisArr[0].data.push(res[0]);\n                            }\n                        })\n                        .catch(err => {\n\n                        })\n                })\n            },\n            /*计时器*/\n            setInterFun(){\n              this.interTime = setInterval(()=>{\n                let endtime = dateFormat('yyyy-mm-dd HH:MM:SS',new Date());\n                let st = new Date(new Date(endtime).valueOf() - this.dataTime * 60 * 60 * 1000);\n                let starttime = dateFormat('yyyy-mm-dd HH:MM:SS',st);\n                /*获取全局利用率百分比*/\n                this.getAllUsedData(this.refreshIntTime/1000);\n                /*获取全局数据包个数*/\n                this.getAllPacketsData(this.refreshIntTime/1000);\n              },this.refreshIntTime);\n            }\n        },\n        beforeRouteEnter(to, from, next){\n          next(vm => {\n            vm.setInterFun();\n          });\n        },\n        beforeRouteLeave(to, from, next) {\n          clearInterval(this.interTime);\n          next();\n        },\n        components:{\n            vFlowchartfrom,\n            vEcharts\n        }\n    }\n</script>\n\n<style scoped>\n  .content-bg{\n    /*height: 1000px;*/\n    font-size: 1rem;\n    background: url(\"../../../static/img/flow-index-bg2.png\");\n    background-size: 100% 100%;\n  }\n  .top-title{\n    font-size: 0.5rem;\n    color: #185bff;\n    padding: 10px;\n  }\n  .chart-from{\n    position: absolute;\n    right: 26px;\n    top: 3px;\n    height: 35px;\n    line-height: 35px;\n    display: flex;\n    align-items: center;\n  }\n  .chart-from span{\n    font-size: 0.35rem;\n  }\n  .chart-from /deep/ .el-input--mini .el-input__inner{\n    border: 1px solid #409eff;\n    color: #409eff;\n    background: 0;\n    border-top: 0;\n    border-left: 0;\n    border-right: 0;\n  }\n  .item-wapper{\n    position: relative;\n    height: auto;\n    /*background: rgb(26,36,47);*/\n    background: url(\"../../../static/img/bd2.png\");\n    background-size: 100% 100%;\n    margin:0.5rem 0.2rem;\n  }\n  .item-title{\n    height: 1rem;\n    line-height: 1rem;\n    font-size: 0.38rem;\n    text-align: left;\n    padding-left: 25px;\n    /*background: url(\"../../../static/img/title-bg.png\");*/\n    background-size: 100% 100%;\n  }\n  .item-content{\n    /*height: calc(100% - 1rem);*/\n    height: 230px;\n    box-sizing: border-box;\n    padding: 0.5rem;\n    padding-top: 0;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/flowManage/realTimeFlow.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content-bg\"},[_c('div',{staticClass:\"top-title\"},[_vm._v(\"全局实时流量\\n    \"),_c('v-flowchartfrom',{staticClass:\"from-wapper\",attrs:{\"refreshBus\":\"realTimeFlowRefreshBus\",\"refreshObj\":_vm.refreshObj}})],1),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"全局-利用率百分比\")]),_vm._v(\" \"),_c('div',{staticClass:\"chart-from\"},[_c('span',[_vm._v(\"带宽：\")]),_vm._v(\" \"),_c('el-select',{staticStyle:{\"width\":\"80px\"},attrs:{\"placeholder\":\"请选择\",\"size\":\"mini\"},model:{value:(_vm.bandwidth),callback:function ($$v) {_vm.bandwidth=$$v},expression:\"bandwidth\"}},_vm._l((_vm.bandwidthArr),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"timeline\",\"echartData\":this.allUsedData}})],1),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"gauge\",\"echartData\":this.allUsedData2}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"item-wapper\"},[_c('div',{staticClass:\"item-title\"},[_vm._v(\"全局数据包个数\")]),_vm._v(\" \"),_c('div',{staticClass:\"item-content\"},[_c('v-echarts',{attrs:{\"echartType\":\"timeline\",\"echartData\":this.allPacketsData}})],1)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-538b7a5f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/flowManage/realTimeFlow.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-538b7a5f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./realTimeFlow.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./realTimeFlow.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./realTimeFlow.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-538b7a5f\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./realTimeFlow.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-538b7a5f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/flowManage/realTimeFlow.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}