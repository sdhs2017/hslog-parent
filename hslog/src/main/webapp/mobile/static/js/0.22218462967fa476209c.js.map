{"version":3,"sources":["webpack:///./static/js/common.js","webpack:///src/components/common/baseDate.vue","webpack:///./src/components/common/baseDate.vue?ccf4","webpack:///./src/components/common/baseDate.vue","webpack:///./src/components/common/bus.js","webpack:///src/components/common/flowChartsFrom.vue","webpack:///./src/components/common/flowChartsFrom.vue?fba6","webpack:///./src/components/common/flowChartsFrom.vue","webpack:///src/components/common/echarts.vue","webpack:///./src/components/common/echarts.vue?7cc5","webpack:///./src/components/common/echarts.vue","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js"],"names":["__webpack_require__","d","__webpack_exports__","jumpHtml","dateFormat","__WEBPACK_IMPORTED_MODULE_0__src_router__","__WEBPACK_IMPORTED_MODULE_1_axios__","n","path_name","componentPath","paramsObj","des","sss","replace","newRouters","path","component","resolve","e","then","__WEBPACK_AMD_REQUIRE_ARRAY__","apply","bind","this","catch","oe","children","name","meta","title","addRoutes","push","query","fmt","date","ret","opt","y+","getFullYear","toString","m+","getMonth","d+","getDate","H+","getHours","M+","getMinutes","S+","getSeconds","k","RegExp","exec","length","padStart","baseDate","props","type","String","busName","defaultVal","Array","data","startVal","endVal","dateArr","mounted","newDate","Date","curMonth","toLocaleDateString","curDay","curHour","curMin","curSec","end","start","setTime","getTime","Object","common","watch","handler","newValue","oldValue","bus","$emit","deep","methods","searchData","common_baseDate","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","value-format","editable","placeholder","on","change","changeDate1","model","value","callback","$$v","expression","_v","default-time","changeDate2","click","staticRenderFns","Component","normalizeComponent","ssrContext","defineProperty","Vue","flowChartsFrom","refreshBus","dataBus","refreshObj","default","refreshTimeVal","refreshOpt","label","dataTimeVal","dataOpt","created","change1","change2","common_flowChartsFrom","size","_l","item","key","_e","echarts","common_echarts","clickEchartData","echartType","echartData","clickState","Boolean","exportName","clickName","_this","$nextTick","judgeEchartType","immediate","barEchart","pieEchart","ringEchart","lineEchart","moreLineEchart","timeLineEchart","gaugeEchart","_this2","myChart","init","$refs","mybox","renderer","setOption","text","baseConfig","x","textStyle","fontSize","color","tooltip","grid","left","right","top","bottom","xAxis","xAxisName","nameTextStyle","axisLine","lineStyle","axisLabel","borderColor","interval","rotate","xAxisArr","yAxis","yAxisName","splitLine","margin","formatter","index","series","hoverText","barWidth","itemStyle","emphasis","barBorderRadius","normal","graphic","LinearGradient","offset","show","position","val","toFixed","yAxisArr","off","params","legend","boundaryGap","smooth","symbol","areaStyle","dispose","option","trigger","axisPointer","backgroundColor","pageTextStyle","width","pageIconColor","i","showSymbol","hoverAnimation","orient","radius","roseType","center","shadowBlur","shadowOffsetX","shadowColor","opacity","pointer","detail","components_common_echarts","ref","module","exports","__esModule","core","$JSON","JSON","stringify","it","arguments"],"mappings":"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","file":"static/js/0.22218462967fa476209c.js","sourcesContent":["/*\n*将图片以PDF格式导出 方法 downloadToPDF(PDFtitle,imgBase64Arr)\n* 参数imgBase64Arr:需要导出的图片集合  注：图片格式必须为Base64格式\n* 参数imgTop:图片之间的间隔（上下）\n* 参数imgWidth：原始图片的宽度 可以是数组 但是长度必须跟imgBase64Arr长度相同\n* 参数imgHeight：原始图片的高度 可以是数组 但是长度必须跟imgBase64Arr长度相同\n* 说明：\t1.--此方法依赖于jsPDF.js插件 使用时应先引入此插件--\n* \t\t2.导出的pdf纸张为A4纸大小\n* \t\t3.图片会根据原始大小在A4纸上进行缩放\n*/\nimport router from \"../../src/router\";\nimport axios from 'axios';\n\nfunction downloadToPDF(imgBase64Arr, imgTop, imgWidth, imgHeight) {\n    //存储imgtop值 用于多页的初始值\n    var oldImgtop = imgTop;\n    //初始化\n    var pdf = new jsPDF('', 'pt', 'a4');\n    //循环添加图片\n    for (var i = 0;i<imgBase64Arr.length;i++){\n        //判断类型\n        if(imgWidth.constructor == Array){\n            var contentWidth = imgWidth[i];\n        }else{\n            var contentWidth = imgWidth;\n        }\n        if(imgHeight.constructor == Array){\n            var contentHeight = imgHeight[i];\n        }else{\n            var contentHeight = imgHeight;\n        }\n\n        //a4纸的尺寸[595.28,841.89]，html页面生成的canvas在pdf中图片的宽高\n        var imgWidth = 595.28;\n        var imgHeight = 592.28/contentWidth * contentHeight;\n        //判断是否大于一页\n        if ((imgTop+imgHeight) < 841.89) {\n            //添加\n            pdf.addImage(imgBase64Arr[i], 'JPEG', 0, imgTop, imgWidth, imgHeight );\n\n        } else {\n            //添加新的一页\n            pdf.addPage();\n            //重新定义距顶端偏移量\n            imgTop = oldImgtop;\n            //添加\n            pdf.addImage(imgBase64Arr[i], 'JPEG', 0, imgTop, imgWidth, imgHeight)\n\n        }\n        //距顶端偏移量  += 图片高度\n        imgTop =imgTop+ oldImgtop+imgHeight;\n    }\n    //下载\n    pdf.save('content.pdf');\n}\n/* 密码强度检验  */\nfunction checkStrong(sValue) {\n    var modes = 0;\n    //正则表达式验证符合要求的\n    if (sValue.length < 1) return modes;\n    if (/\\d/.test(sValue)) modes++; //数字\n    if (/[a-z]/.test(sValue)) modes++; //小写\n    if (/[A-Z]/.test(sValue)) modes++; //大写\n    if (/\\W/.test(sValue)) modes++; //特殊字符\n\n    //逻辑处理\n    switch (modes) {\n        case 1:\n            return 1;\n            break;\n        case 2:\n            return 2;\n            break;\n        case 3:\n        case 4:\n            return sValue.length < 12 ? 3 : 4\n            break;\n    }\n    return modes;\n}\n/*\n****请求前缀*****\n* */\nlet baseUrl = '/jz'\n\n/*\n****页面跳转方法*****\n* 说明：将路由信息添加到路由文件中，实现动态路由\n* 参数 path_name:跳转的路径以及组件的名称\n* 参数 componentPath：引用的组件路径\n* 参数 paramsObj：传递的参数集合 {}\n* 参数 des:标签文字描述\n* */\nfunction jumpHtml(path_name,componentPath,paramsObj,des) {\n    let sss = path_name.replace(/\\//g,\"&-\")\n    let newRouters = [{\n        path:'/',\n        component: resolve => require(['@/components/common/Home.vue'], resolve),\n        children:[\n            {\n                path:'/'+sss,\n                name:path_name,\n                component: resolve => require(['@/components/'+ componentPath], resolve),\n                meta: { title: des }\n            }\n        ]\n    }]\n    router.addRoutes(newRouters);\n    router.push({path:sss,query: paramsObj})\n}\n/*\n****保存路由方法*****\n* 说明：将动态添加的路由保存在本地，用于页面的刷新加载\n* 参数 path_name:跳转的路径以及组件的名称\n* 参数 componentPath：引用的组件路径\n* 参数 des:标签文字描述\n* */\nfunction savePath(path_name,componentPath,des){\n    //将路由存放在本地 用来刷新页面时添加路由\n    let sss = path_name.replace(/\\//g,\"&-\")\n    let obj = {\n        path:sss,\n        component:componentPath,\n        title:des\n    }\n    sessionStorage.setItem('/'+sss,JSON.stringify(obj))\n}\n\n/*\n* 业务流分析页面\n* 计算位置\n* */\nfunction Y_Coordinates(  x,  y,  k,  x0){\n    return k * x0 - k * x + y;\n}\n\nfunction calCircleCenter( p1, p2, r ) {\n    let k = 0.0,k_verticle = 0.0;\n    let mid_x = 0.0,mid_y = 0.0;\n    let a = 1.0;\n    let b = 1.0;\n    let c = 1.0;\n    let center1 = new Array();\n    let center2 = new Array();\n\n\n    k = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n\n    if(k == 0)\n    {\n        center1[0] = (p1[0] + p2[0]) / 2.0;\n        center2[0] = (p1[0] + p2[0]) / 2.0;\n        center1[1] = p1[1] + Math.sqrt(r * r -(p1[0] - p2[0]) * (p1[0] - p2[0]) / 4.0);\n        center2[1] = p2[1] - Math.sqrt(r * r -(p1[0] - p2[0]) * (p1[0] - p2[0]) / 4.0);\n    }\n    else\n    {\n        k_verticle = -1.0 / k;\n        mid_x = (p1[0] + p2[0]) / 2.0;\n        mid_y = (p1[1] + p2[1]) / 2.0;\n        a = 1.0 + k_verticle * k_verticle;\n        b = -2 * mid_x - k_verticle * k_verticle * (p1[0] + p2[0]);\n        c = mid_x * mid_x + k_verticle * k_verticle * (p1[0] + p2[0]) * (p1[0] + p2[0]) / 4.0 -\n            (r * r - ((mid_x - p1[0]) * (mid_x - p1[0]) + (mid_y - p1[1]) * (mid_y - p1[1])));\n\n        center1[0] = (-1.0 * b + Math.sqrt(b * b -4 * a * c)) / (2 * a);\n        center2[0] = (-1.0 * b - Math.sqrt(b * b -4 * a * c)) / (2 * a);\n        center1[1] = Y_Coordinates(mid_x,mid_y,k_verticle,center1[0]);\n        center2[1] = Y_Coordinates(mid_x,mid_y,k_verticle,center2[0]);\n    }\n\n    //return [center1[0],center1[1]]//\n    return [center1[0],center1[1],center2[0],center2[1]]\n    //console.log( center1[0] +  \"    \" + center1[1] );\n    //console.log( center2[0] + \"    \" + center2[1] );\n\n}\n\n/*\n* 拖拽改变宽度\n*\n*\n* */\nfunction gresizeW ($this) {\n    var jq = $this;\n    jq.wrapInner(' <div> </div>');//把内容用div括起来，在旁边加一div,用来触发Resize\n    jq.children().eq(0).css({ height: '100%', overflow: 'auto' });\n    jq.css({ position: 'relative', paddingRight: parseInt(jq.css('padding-right')) + 1 ,width:jq.width()});//留触发Resize的div宽度\n    $(' <div style=\"width:2px; height:100%;cursor:e-resize;position:absolute;top:0;right:0;\"> </div>')\n        .on('mousedown', function (e) {\n            document.onselectstart = function (e) { return false };//拖动鼠标时不显示选择效果\n            var jqResize = $(this).parent();\n            $(document).on('mousemove.gym', function (e) {\n                jq.css(\"maxWidth\",\"none\");\n                var w = jqResize.offset().left;\n                if (e.pageX - w > 600){//最小留600px\n                    jqResize.width(e.pageX - w);\n                }\n                e.stopPropagation();\n                return false;\n            })\n                .on('mouseup.gym', function (e) {\n                    $(document).off('.gym');\n                    document.onselectstart = function (e) { return true };\n                })\n        })\n        .on('mouseup', function (e) {\n            $(document).off('.gym');\n            document.onselectstart = function (e) { return true };\n        }).appendTo(jq);\n}\n/*\n* 控制按钮权限\n* */\nfunction is_has(id){\n    let arr = JSON.parse(sessionStorage.getItem('btnArr'))\n    if(arr.includes(id)){\n        return true;\n    }else{\n        return false;\n    }\n}\n/*\n* 获取按钮权限\n*\n* */\n/*function getBtn() {\n    axios.get(Vue.prototype.$baseUrl+'/user/checkLogin.do',{})\n        .then((res)=>{\n            sessionStorage.setItem('btnArr',)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n}*/\n/*\n* 获得当前日期 并返回固定格式 yyyy-mm-dd hh:mm:ss\n* */\nfunction getCurrentDate(fmt) {\n    let currentDate = new Date();\n    var o = {\n        \"M+\": currentDate.getMonth() + 1, //月份\n        \"d+\": currentDate.getDate(), //日\n        \"h+\": currentDate.getHours(), //小时\n        \"m+\": currentDate.getMinutes(), //分\n        \"s+\": currentDate.getSeconds() //秒\n    };\n    if (/(y+)/.test(fmt)){ //根据y的长度来截取年\n        fmt = fmt.replace(RegExp.$1, (currentDate.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (var k in o){\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    }\n    return fmt;\n\n}\n/*\n* 时间格式化\n* fmt - yyyy-mm-dd HH:MM:SS\n* date - 时间\n* */\nfunction dateFormat(fmt, date) {\n    let ret;\n    let opt = {\n        \"y+\": date.getFullYear().toString(),        // 年\n        \"m+\": (date.getMonth() + 1).toString(),     // 月\n        \"d+\": date.getDate().toString(),            // 日\n        \"H+\": date.getHours().toString(),           // 时\n        \"M+\": date.getMinutes().toString(),         // 分\n        \"S+\": date.getSeconds().toString()          // 秒\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\n    };\n    for (let k in opt) {\n        ret = new RegExp(\"(\" + k + \")\").exec(fmt);\n        if (ret) {\n            fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\n        };\n    };\n    return fmt;\n}\n\nexport {\n    downloadToPDF,\n    checkStrong,\n    jumpHtml,\n    savePath,\n    calCircleCenter,\n    gresizeW,\n    is_has,\n    dateFormat,\n    baseUrl\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/common.js\n// module id = /sA3\n// module chunks = 0","<template>\n    <div class=\"date-wapper\">\n      <el-date-picker\n        v-model=\"startVal\"\n        type=\"datetime\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n        @change=\"changeDate1\"\n        :editable=\"false\"\n        placeholder=\"开始日期时间\">\n      </el-date-picker>\n      <!--<b>-</b>-->\n      <el-date-picker\n        v-model=\"endVal\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n        type=\"datetime\"\n        :editable=\"false\"\n        @change=\"changeDate2\"\n        default-time=\"23:59:59\"\n        placeholder=\"结束日期时间\">\n      </el-date-picker>\n      <el-button @click=\"searchData\" type=\"primary\" class=\"btn\"><i class=\"el-icon-search\"></i></el-button>\n    </div>\n    \n</template>\n\n<script>\n    import bus from '../common/bus';\n    import {dateFormat} from '../../../static/js/common'\n    export default {\n        name: \"baseDate\",\n        props:{\n            type:{\n              type:String\n            },\n            busName:{\n                type:String\n            },\n            defaultVal:{\n                type:Array\n            },\n        },\n        data() {\n            return {\n              startVal:'',\n              endVal:'',\n              dateArr:[]\n            }\n        },\n        mounted(){\n            //this.dateVal = this.defaultVal;\n            let newDate = new Date();\n            let curDate = newDate.toLocaleDateString();\n            let curYear = newDate.getFullYear();\n            let curMonth = newDate.getMonth() + 1;\n            let curDay = newDate.getDate();\n            let curHour = newDate.getHours();\n            let curMin = newDate.getMinutes();\n            let curSec = newDate.getSeconds();\n            if(curMonth < 10){\n                curMonth = '0'+curMonth\n            }\n            if(curDay < 10){\n                curDay = '0' + curDay;\n            }\n            if(curHour < 10){\n                curHour = '0' + curHour;\n            }\n            if(curMin < 10){\n                curMin = '0' + curMin;\n            }\n            if(curSec < 10){\n                curSec = '0' + curSec;\n            }\n            let startTime = curYear+'-'+curMonth+'-01';\n            let endTime = curYear+'-'+curMonth+'-'+curDay+' '+curHour+':'+curMin+':'+curSec;\n            /*if(this.type ==='daterange'){\n                this.dateVal = [startTime,endTime];\n            }else if(this.type === 'datetimerange'){\n                this.dateVal2 = [startTime+' 00:00:00',endTime];\n            }*/\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            this.startVal =dateFormat('yyyy-mm-dd HH:MM:SS',start)\n            this.endVal = dateFormat('yyyy-mm-dd HH:MM:SS',end);\n            this.dateArr = [this.startVal,this.endVal]\n        },\n        watch:{\n           /* 'startVal'(){\n              console.log(this.startVal)\n                // bus.$emit(this.busName,this.dateVal);\n              this.dateArr[0] = this.startVal;\n            },\n            'endVal'(){\n              console.log(this.endVal)\n                // bus.$emit(this.busName,this.dateVal2)\n              this.dateArr[1] = this.endVal;\n            },*/\n            dateArr:{\n             /*\n              //判断数据合法性\n              if(this.dateArr[0] !== '' && this.dateArr[1] !== ''){\n                console.log(this.dateArr)\n              }*/\n              handler(newValue, oldValue) {\n                if(this.dateArr[0] !== null && this.dateArr[1] !== null ){\n                  bus.$emit(this.busName,this.dateArr)\n                }\n              },\n              //immediate: true,\n              deep: true\n            }\n\n        },\n        methods:{\n          /*changeDate1(){\n            this.dateArr = [this.startVal,this.endVal]\n          },\n          changeDate2(){\n            this.dateArr = [this.startVal,this.endVal]\n          },*/\n          searchData(){\n            this.dateArr = [this.startVal,this.endVal]\n          },\n        }\n    }\n</script>\n\n<style scoped>\n  span{\n    /*color: #409eff;\n    text-shadow: 0;\n    text-shadow: initial;*/\n  }\n  .btn{\n    background-color: #185bff;\n    border-color: #185bff;\n    -webkit-border-radius: 0;\n    -moz-border-radius: 0;\n    border-radius: 0;\n  }\n  .date-wapper{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 5px;\n  }\n  .date-wapper b{\n    margin: 0 5px;\n    font-weight: 100;\n  }\n  .date-wapper /deep/ .el-input__inner{\n    font-size: 10px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/common/baseDate.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"date-wapper\"},[_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"value-format\":\"yyyy-MM-dd HH:mm:ss\",\"editable\":false,\"placeholder\":\"开始日期时间\"},on:{\"change\":_vm.changeDate1},model:{value:(_vm.startVal),callback:function ($$v) {_vm.startVal=$$v},expression:\"startVal\"}}),_vm._v(\" \"),_c('el-date-picker',{attrs:{\"value-format\":\"yyyy-MM-dd HH:mm:ss\",\"type\":\"datetime\",\"editable\":false,\"default-time\":\"23:59:59\",\"placeholder\":\"结束日期时间\"},on:{\"change\":_vm.changeDate2},model:{value:(_vm.endVal),callback:function ($$v) {_vm.endVal=$$v},expression:\"endVal\"}}),_vm._v(\" \"),_c('el-button',{staticClass:\"btn\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.searchData}},[_c('i',{staticClass:\"el-icon-search\"})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-236b2dc6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/common/baseDate.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-236b2dc6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./baseDate.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./baseDate.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./baseDate.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-236b2dc6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./baseDate.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-236b2dc6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/common/baseDate.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\r\n\r\n// 使用 Event Bus\r\nconst bus = new Vue();\r\n\r\nexport default bus;\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/bus.js","<template>\n    <div class=\"select-wapper\">\n      <div>\n        <span class=\"select-lable\">刷新间隔</span>\n        <el-select v-model=\"refreshTimeVal\" @change = \"change1\" placeholder=\"请选择\" size=\"mini\" class=\"select-list\">\n          <el-option\n            v-for=\"item in refreshOpt\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </div>\n      <div v-if=\"this.refreshObj.defaultVal == ''\">\n        <span class=\"select-lable\">数据时间间隔</span>\n        <el-select v-model=\"dataTimeVal\" @change = \"change2\" placeholder=\"请选择\" size=\"mini\" class=\"select-list\">\n          <el-option\n            v-for=\"item in dataOpt\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </div>\n    </div>\n    \n</template>\n\n<script>\n    import bus from '../common/bus';\n    export default {\n        name: \"flowChartsFrom\",\n        props:{\n          refreshBus:'',\n          dataBus:'',\n          refreshObj:{\n            type:Object,\n            default(){\n              return{\n                defaultVal:'',\n                opt:[]\n              }\n            }\n          }\n        },\n        data() {\n            return {\n                //刷新时间间隔\n                refreshTimeVal:'5000',\n                refreshOpt:[\n                    {\n                      label:'5s',\n                      value:'5000'\n                    },\n                    {\n                        label:'10s',\n                        value:'10000'\n                    },\n                    {\n                        label:'30s',\n                        value:'30000'\n                    },\n                    {\n                        label:'60s',\n                        value:'60000'\n                    }\n                ],\n                //数据日期间隔\n                dataTimeVal:'3600',\n                dataOpt:[\n                    {\n                        label:'1小时',\n                        value:'3600'\n                    },\n                    {\n                        label:'2小时',\n                        value:'7200'\n                    },\n                    {\n                        label:'4小时',\n                        value:'14400'\n                    },\n                    {\n                        label:'8小时',\n                        value:'28800'\n                    },\n                    {\n                        label:'12小时',\n                        value:'43200'\n                    },\n                    {\n                        label:'24小时',\n                        value:'86400'\n                    }\n                ]\n            }\n        },\n        created(){\n          if (this.refreshObj.defaultVal !== ''){\n            this.refreshTimeVal = this.refreshObj.defaultVal;\n            this.refreshOpt = this.refreshObj.opt;\n          }\n        },\n        methods:{\n            /*刷新时间间隔改变事件*/\n            change1(){\n                bus.$emit(this.refreshBus,this.refreshTimeVal)\n            },\n            /*数据日期间隔改变事件*/\n            change2(){\n                bus.$emit(this.dataBus,this.dataTimeVal)\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .select-wapper{\n        display: flex;\n      margin-top: 10px;\n      justify-content: center;\n    }\n    .select-wapper>div{\n        /*margin-left: 10px;*/\n        display: flex;\n        align-items: center;\n    }\n    .select-lable{\n        box-sizing: border-box;\n        font-weight: 100!important;\n        /*font-size: 16px;*/\n        display: inline-block;\n        font-size: 12px;\n        height: 28px;\n        background: 0;\n        border: 1px solid #409eff;\n        line-height: 28px;\n        padding: 0 5px;\n        color: #fff;\n        word-break: keep-all;\n       color: #409eff;\n    }\n    .select-list{\n        width: 80px;\n    }\n     /deep/ .el-input__inner{\n        -webkit-border-radius: 0!important;\n        -moz-border-radius: 0!important;\n        border-radius:0!important;\n        position: relative;\n        background: 0;\n       border: 1px solid #409eff;\n       color: #409eff;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/common/flowChartsFrom.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"select-wapper\"},[_c('div',[_c('span',{staticClass:\"select-lable\"},[_vm._v(\"刷新间隔\")]),_vm._v(\" \"),_c('el-select',{staticClass:\"select-list\",attrs:{\"placeholder\":\"请选择\",\"size\":\"mini\"},on:{\"change\":_vm.change1},model:{value:(_vm.refreshTimeVal),callback:function ($$v) {_vm.refreshTimeVal=$$v},expression:\"refreshTimeVal\"}},_vm._l((_vm.refreshOpt),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),(this.refreshObj.defaultVal == '')?_c('div',[_c('span',{staticClass:\"select-lable\"},[_vm._v(\"数据时间间隔\")]),_vm._v(\" \"),_c('el-select',{staticClass:\"select-list\",attrs:{\"placeholder\":\"请选择\",\"size\":\"mini\"},on:{\"change\":_vm.change2},model:{value:(_vm.dataTimeVal),callback:function ($$v) {_vm.dataTimeVal=$$v},expression:\"dataTimeVal\"}},_vm._l((_vm.dataOpt),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-bf9d9de0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/common/flowChartsFrom.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-bf9d9de0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./flowChartsFrom.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./flowChartsFrom.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./flowChartsFrom.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bf9d9de0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./flowChartsFrom.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-bf9d9de0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/common/flowChartsFrom.vue\n// module id = null\n// module chunks = ","<template>\n    <div class=\"echart-wapper\" ref=\"mybox\">\n\n    </div>\n</template>\n\n<script>\n    import bus from '../common/bus';\n    const echarts = require('echarts');\n\n    export default {\n        name: \"echarts\",\n        data(){\n          return{\n              clickEchartData:{}//点击图表获得的数据\n          }\n        },\n        props: {\n            //图表类型\n            echartType: {\n                type: String\n            },\n            //图表数据\n            echartData: {\n                type: Object\n            },\n            //是否开启图表点击\n            clickState:{\n                type: Boolean\n            },\n            //busname\n            busName:{\n                type:Object,\n                default:()=>{\n                    return {\n                        exportName:'',\n                        clickName:''\n                    }\n                }\n            }\n        },\n        created() {\n        },\n        mounted() {\n        },\n        watch:{\n          //监听props参数值的变化\n          echartData:{\n            handler() {\n              this.$nextTick( ()=> {\n                this.judgeEchartType()\n              })\n            },\n            immediate: true,\n            deep: true\n          }\n        },\n        methods:{\n            //判断图表类型\n            judgeEchartType(){\n              switch (this.echartType) {\n                case 'bar':\n                  this.barEchart();\n                  break;\n                case 'morebar':\n                  this.barEchart();\n                  break;\n                case 'pie':\n                  this.pieEchart();\n                  break;\n                case 'ring':\n                  this.ringEchart();\n                  break;\n                case 'line':\n                  this.lineEchart();\n                  break;\n                case 'moreline':\n                  this.moreLineEchart();\n                  break;\n                case 'timeline':\n                  this.timeLineEchart();\n                  break;\n                case 'gauge':\n                  this.gaugeEchart();\n                  break;\n                default:\n                  break;\n              }\n            },\n            //柱状图\n            barEchart(){\n                // 基于准备好的dom，初始化echarts实例\n                // var myChart = echarts.init(document.getElementById('echart-wapper'));\n                let myChart = echarts.init(this.$refs.mybox,null, {renderer: 'svg'});\n                // 绘制图表\n                myChart.setOption({\n                    title: {\n                        text: this.echartData.baseConfig.title,\n                        x:'center',\n                        textStyle:{\n                          fontSize: '16',\n                          color:'#e4956d'\n                        }\n                    },\n                    tooltip: {},\n                    grid: {\n                      left: '15%',   // 与容器左侧的距离\n                      right: '15%', // 与容器右侧的距离\n                      top: '15%',   // 与容器顶部的距离\n                      bottom: '20%', // 与容器底部的距离\n                    },\n                    xAxis: {\n                        name:this.echartData.baseConfig.xAxisName,\n                        nameTextStyle:{\n                            color:'#5bc0de'\n                        },\n                        axisLine:{\n                            lineStyle:{\n                                color:'#5bc0de'\n                            }\n                        },\n                        axisLabel:{\n                            borderColor:'#5bc0de',\n                            fontSize:'10',\n                            interval:0,\n                            rotate:this.echartData.baseConfig.rotate ? this.echartData.baseConfig.rotate : '0'\n                        },\n                        data: this.echartData.xAxisArr\n                    },\n                    yAxis: {\n                        name:this.echartData.baseConfig.yAxisName,\n                        nameTextStyle:{\n                            color:'#5bc0de'\n                        },\n                        splitLine:{\n                            lineStyle:{\n                              color:'#0d1c55'\n                            }\n                        },\n                        axisLine:{\n                            lineStyle:{\n                                color:'#5bc0de'\n                            }\n                        },\n                        axisLabel: {\n                          margin: 2,\n                          formatter: function (value, index) {\n                            if (value >= 10000 && value < 10000000) {\n                              value = value / 10000 + \"万\";\n                            } else if (value >= 10000000) {\n                              value = value / 10000000 + \"千万\";\n                            }\n                            return value;\n                          }\n                        }\n                    },\n                    series: [{\n                        name: this.echartData.baseConfig.hoverText,\n                        type: 'bar',\n                        barWidth: 20,\n                        itemStyle:{\n                          emphasis: {\n                            barBorderRadius: 7,\n                          },\n                          normal: {\n                            barBorderRadius: 7,\n                            color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{\n                              offset: 0,\n                              color: 'rgba(59,118,234,0.3)'\n                            }, {\n                              offset: 1,\n                              color: '#36BBF4'\n                            }]),\n                            label: {\n                              show: true,\n                              position: 'top',\n                              textStyle: { //数值样式\n                                color: 'white',\n                                fontSize: 10\n                              },\n                              formatter:function(val){\n                                let value = val.data;\n                                if (value >= 10000 && value < 10000000) {\n                                  value = (value / 10000).toFixed(2) + \"万\";\n                                } else if (value >= 10000000) {\n                                  value = (value / 10000000).toFixed(2) + \"千万\";\n                                }\n                                return value;\n                              }\n                            }\n                          }\n                        },\n                        data: this.echartData.yAxisArr\n                    }]\n                });\n              myChart.off('click')\n              myChart.on('click',(params)=>{\n                //调用父组件回调函数\n               //this.$emit('callbackFucnc', params);\n                bus.$emit(this.busName.clickName,params)\n              })\n                /*//图表点击事件\n                myChart.on('click',(params)=>{\n                    //调用父组件回调函数\n                    this.$emit('callbackFucnc', params);\n                    bus.$emit(this.busName.clickName,params)\n                })\n                bus.$emit(this.busName.exportName,myChart)*/\n                /*window.addEventListener(\"resize\",()=>{\n                    myChart.resize();\n                });*/\n            },\n            //折线图\n            lineEchart(){\n                let myChart = echarts.init(this.$refs.mybox,null, {renderer: 'svg'});\n                myChart.setOption({\n                    title: {\n                        text:this.echartData.baseConfig.title,\n                        x:'center',\n                        textStyle:{\n                            fontSize: '16',\n                            color:'#e4956d'\n                        }\n                    },\n                    tooltip: {\n                        /*trigger: 'axis',\n                        axisPointer: {\n                            type: 'cross',\n                            label: {\n                                backgroundColor: '#6a7985'\n                            }\n                        } ,\n                        formatter: '{b} 时<br /> {a} : {c} 条'*/\n                    },\n                    legend: {\n                        data:[],\n                        left: 'left'\n                    },\n                    grid: {\n                      left: '15%',   // 与容器左侧的距离\n                      right: '15%', // 与容器右侧的距离\n                      top: '20%',   // 与容器顶部的距离\n                      bottom: '15%', // 与容器底部的距离\n                    },\n                    xAxis: {\n                        type: 'category',\n                        name:this.echartData.baseConfig.xAxisName,\n                        nameTextStyle:{\n                            color:'#5bc0de'\n                        },\n                        axisLine:{\n                            lineStyle:{\n                                color:'#5bc0de'\n                            }\n                        },\n                        boundaryGap: false,\n                        data: this.echartData.xAxisArr\n                    },\n                    yAxis: {\n                        name:this.echartData.baseConfig.yAxisName,\n                        axisLine:{\n                            lineStyle:{\n                                color:'#5bc0de'\n                            }\n                        },\n                        splitLine:{\n                            // show:false,\n                            lineStyle:{\n                                color:'#0d1c55'\n                            }\n                        },\n                        nameTextStyle:{\n                            color:'#5bc0de'\n                        },\n                        axisLabel: {\n                          margin: 2,\n                          formatter: function (value, index) {\n                            if (value >= 10000 && value < 10000000) {\n                              value = value / 10000 + \"万\";\n                            } else if (value >= 10000000) {\n                              value = value / 10000000 + \"千万\";\n                            }\n                            return value;\n                          }\n                        }\n                    },\n                    series: [{\n                        name:this.echartData.baseConfig.hoverText,\n                        type:'line',\n                        smooth:true,\n                        symbol: 'none',\n                        areaStyle: {\n                          normal: {\n                            //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                              offset: 0,\n                              color: '#00EABD'\n                            }, {\n                              offset: 1,\n                              color: 'rgba(116,235,213,0.1)'\n                            }])\n                          }\n                        },\n                        itemStyle:{\n                            normal:{\n                                color:'#0EBF9C'\n                            }\n                        },\n                        data:this.echartData.yAxisArr\n                    }]\n                });\n               /* //图表点击事件\n                myChart.on('click',(params)=>{\n                    //调用父组件回调函数\n                    //this.$emit('callbackFucnc', params);\n                    bus.$emit(this.busName.clickName,params)\n                })\n                bus.$emit(this.busName.exportName,myChart)*/\n                /*window.addEventListener(\"resize\",function(){\n                    myChart.resize();\n                });*/\n            },\n            moreLineEchart(){\n                echarts.init(this.$refs.mybox).dispose();//销毁前一个实例\n                let myChart = echarts.init(this.$refs.mybox);\n                let option = {\n                    title: {\n                        text:this.echartData.baseConfig.title,\n                        x:'center',\n                        textStyle:{\n                            color:'#5bc0de'\n                        }\n                    },\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: {\n                            type: 'cross',\n                            label: {\n                                backgroundColor: '#6a7985'\n                            }\n                        }\n                    },\n                    grid: {\n                      left: '15%',   // 与容器左侧的距离\n                      right: '15%', // 与容器右侧的距离\n                      top: '20%',   // 与容器顶部的距离\n                      bottom: '20%', // 与容器底部的距离\n                    },\n                    legend: {\n                      type:'scroll',\n                      pageTextStyle:{\n                        color:'#eee',\n                      },\n                      // pageButtonPosition:'start',\n                      data:[],\n                      width:'80%',\n                      // right:\"-10%\",\n                      top:\"-6px\",\n                      textStyle:{\n                        color:'#eee',\n                      },\n                      pageIconColor:'#fff'\n                    },\n                    xAxis: {\n                        name:this.echartData.baseConfig.xAxisName,\n                        nameTextStyle:{\n                            color:'#5bc0de'\n                        },\n                        axisLine:{\n                            lineStyle:{\n                                color:'#5bc0de'\n                            }\n                        },\n                        boundaryGap: false,\n                        data: this.echartData.xAxisArr\n                    },\n                    yAxis: {\n                        name:this.echartData.baseConfig.yAxisName,\n                        axisLine:{\n                            lineStyle:{\n                                color:'#5bc0de'\n                            }\n                        },\n                        splitLine:{\n                            lineStyle:{\n                                color:'#0d1c55'\n                            }\n                        },\n                        nameTextStyle:{\n                            color:'#5bc0de'\n                        },\n                        axisLabel: {\n                          margin: 2,\n                          formatter: function (value, index) {\n                            if (value >= 10000 && value < 10000000) {\n                              value = value / 10000 + \"万\";\n                            } else if (value >= 10000000) {\n                              value = value / 10000000 + \"千万\";\n                            }\n                            return value;\n                          }\n                        }\n                    },\n                    series:[]\n                };\n                for(let i in this.echartData.yAxisArr ){\n                  option.legend.data.push(this.echartData.yAxisArr[i].name);\n                  option.series.push({\n                    name:this.echartData.yAxisArr[i].name,\n                    type: 'line',\n                    smooth: true, //平滑性\n                    symbol: 'none',\n                    areaStyle: {\n                      normal: {\n                        //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                          offset: 0,\n                          color: this.echartData.yAxisArr[i].color\n                        }, {\n                          offset: 1,\n                          color: 'rgba(116,235,213,0.1)'\n                        }])\n\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        color: this.echartData.yAxisArr[i].color\n                      }\n                    },\n                    data: this.echartData.yAxisArr[i].data\n                  })\n                }\n                myChart.setOption(option);\n               /* //图表点击事件\n                myChart.on('click',(params)=>{\n                    //调用父组件回调函数\n                    //this.$emit('callbackFucnc', params);\n                    bus.$emit(this.busName.clickName,params)\n                })\n                bus.$emit(this.busName.exportName,myChart)*/\n               /* window.addEventListener(\"resize\",function(){\n                    myChart.resize();\n                });*/\n            },\n            //实时动态更新\n            timeLineEchart(){\n              let myChart = echarts.init(this.$refs.mybox,null, {renderer: 'svg'});\n              let option = {\n                title: {\n                  text:this.echartData.baseConfig.title,\n                  x:'center',\n                  textStyle:{\n                    color:'#5bc0de'\n                  }\n                },\n                grid: {\n                  left: '15%',   // 与容器左侧的距离\n                  right: '15%', // 与容器右侧的距离\n                  top: '20%',   // 与容器顶部的距离\n                  bottom: '20%', // 与容器底部的距离\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  axisPointer: {\n                    type: 'cross',\n                    label: {\n                      backgroundColor: '#6a7985'\n                    }\n                  }\n                },\n                legend: {\n                  data:[],\n                  right:\"5%\",\n                  top:\"25px\",\n                  textStyle:{\n                    color:'#eee'\n                  }\n                },\n                xAxis: {\n                  name:this.echartData.baseConfig.xAxisName,\n                  type: 'time',\n                  nameTextStyle:{\n                    color:'#5bc0de'\n                  },\n                  axisLine:{\n                    lineStyle:{\n                      color:'#5bc0de'\n                    }\n                  },\n                  splitLine: {\n                    show: false\n                  }\n                },\n                yAxis: {\n                  name:this.echartData.baseConfig.yAxisName,\n                  type: 'value',\n                  boundaryGap: [0, '100%'],\n                  nameTextStyle:{\n                    color:'#5bc0de'\n                  },\n                  axisLine:{\n                    lineStyle:{\n                      color:'#5bc0de'\n                    }\n                  },\n                  splitLine: {\n                    show: false\n                  },\n                  axisLabel: {\n                    margin: 2,\n                    formatter: function (value, index) {\n                      if (value >= 10000 && value < 10000000) {\n                        value = value / 10000 + \"万\";\n                      } else if (value >= 10000000) {\n                        value = value / 10000000 + \"千万\";\n                      }\n                      return value;\n                    }\n                  }\n                },\n                series: []\n              };\n              for(let i in this.echartData.yAxisArr ){\n                option.legend.data.push(this.echartData.yAxisArr[i].name);\n                option.series.push({\n                  name:this.echartData.yAxisArr[i].name,\n                  type: 'line',\n                  smooth: true, //平滑性.\n                  showSymbol: false,\n                  hoverAnimation: false,\n                  areaStyle: {\n                    normal: {\n                      //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\n                      color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                        offset: 0,\n                        color: this.echartData.yAxisArr[i].color\n                      }, {\n                        offset: 1,\n                        color: 'rgba(116,235,213,0.1)'\n                      }])\n\n                    }\n                  },\n                  itemStyle: {\n                    normal: {\n                      color: this.echartData.yAxisArr[i].color\n                    }\n                  },\n                  data: this.echartData.yAxisArr[i].data\n                })\n              }\n              //option.series = this.echartData.yAxisArr ;\n              myChart.setOption(option);\n              /*window.addEventListener(\"resize\",function(){\n                myChart.resize();\n              });*/\n            },\n            //饼图\n            pieEchart(){\n                //var myChart = echarts.init(document.getElementById('echart-wapper'));\n                let myChart = echarts.init(this.$refs.mybox,null, {renderer: 'svg'});\n                myChart.setOption({\n                    title : {\n                        text: this.echartData.baseConfig.title,\n                        x:'center',\n                        textStyle:{\n                          fontSize: '16',\n                          color:'#e4956d'\n                        }\n                    },\n                    tooltip : {\n                        trigger: 'item',\n                        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n                    },\n                    legend: {\n                        orient: 'vertical',\n                        left: 'left',\n                        data: []\n                    },\n                    // color:[\"#5bc0de\",\"#1BB2D8\",\"#99D2DD\",\"#88B0BB\",\"#1C7099\",\"#038CC4\",\"#75ABD0\",\"#AFD6DD\",\"#1790CFs\"],\n                    color:['#0FBF9C','#E49831','#48A2E3','#E95555','#AE59E3','#5E6EE3','#8196BD','#88B0BB'],\n                    series : [\n                        {\n                            name: this.echartData.baseConfig.hoverText,\n                            type: 'pie',\n                            radius : [15, 50],\n                            roseType : 'radius',\n                            center: ['50%', '60%'],\n                             /*data:[\n                                {value:335, name:'alert multi control'},\n                                {value:310, name:'alert_multi_verify'},\n                                {value:234, name:'cur_yottabyte'},\n                                {value:135, name:'share'},\n                                {value:1548, name:'cj test'}\n                            ],*/\n                            data:this.echartData.yAxisArr,\n                            itemStyle: {\n                                emphasis: {\n                                    shadowBlur: 10,\n                                    shadowOffsetX: 0,\n                                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                                },\n                                opacity:0.9\n                              /*color: {\n                                type: 'radial',\n                                x: 0.5,\n                                y: 0.5,\n                                r: 0.5,\n                                colorStops: [{\n                                  offset: 0, color: 'red' // 0% 处的颜色\n                                }, {\n                                  offset: 1, color: 'blue' // 100% 处的颜色\n                                }],\n                                global: false // 缺省为 false\n                              }*/\n                            }\n                        }\n                    ]\n                });\n               /* //图表点击事件\n                myChart.on('click',(params)=>{\n                    //调用父组件回调函数\n                    //this.$emit('callbackFucnc', params);\n                    bus.$emit(this.busName.clickName,params)\n                })\n                bus.$emit(this.busName.exportName,myChart)*/\n                /*window.addEventListener(\"resize\",function(){\n                    myChart.resize();\n                });*/\n            },\n            //仪表盘\n            gaugeEchart(){\n              let myChart = echarts.init(this.$refs.mybox,null, {renderer: 'svg'});\n              myChart.setOption({\n                title : {\n                  text: this.echartData.baseConfig.title,\n                  x:'center',\n                  textStyle:{\n                    color:'#5bc0de'\n                  }\n                },\n                tooltip : {\n                  formatter: \"{a} <br/>{b} : {c}%\"\n                },\n                series: [\n                  {\n                    name: this.echartData.baseConfig.hoverText,\n                    type: 'gauge',\n                    title:{\n                      color:'#5bc0de'\n                    },\n                    axisLine: {            // 坐标轴线\n                      lineStyle: {       // 属性lineStyle控制线条样式\n                        color: [[0.09, 'lime'],[0.82, '#1e90ff'],[1, '#ff4500']],\n                        width: 2,\n                        shadowColor : '#000', //默认透明\n                        shadowBlur: 0,\n                      }\n                    },\n                    axisLabel: {            // 坐标轴小标记\n                      textStyle: {       // 属性lineStyle控制线条样式\n                        color: '#5bc0de',\n                        fontSize:9,   //改变仪表盘内刻度数字的大小\n                        shadowColor : '#5bc0de', //默认透明\n                      }\n                    },\n                    pointer:{\n                      width:3\n                    },\n                    splitLine:{\n                      length:10\n                    },\n                    detail: {\n                      formatter:'{value}%',\n                      fontSize: 10,\n                    },\n                    //data: [{value: 10, name: '完成率'}]\n                    data:this.echartData.yAxisArr[0].data,\n                  }\n                ]\n              })\n             /* window.addEventListener(\"resize\",function(){\n                myChart.resize();\n              });*/\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n.echart-wapper{\n    width: 100%;\n    height: 100%;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/common/echarts.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"mybox\",staticClass:\"echart-wapper\"})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5af8d9aa\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/common/echarts.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5af8d9aa\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./echarts.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./echarts.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./echarts.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5af8d9aa\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./echarts.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5af8d9aa\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/common/echarts.vue\n// module id = null\n// module chunks = ","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/json/stringify.js\n// module id = mvHQ\n// module chunks = 0 27","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/json/stringify.js\n// module id = qkKv\n// module chunks = 0 27"],"sourceRoot":""}