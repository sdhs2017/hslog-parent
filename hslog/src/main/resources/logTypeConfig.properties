
#后端查询出来的日志类型反馈到前端需要进行转换，数据格式是  “后端的value:前端要显示的值”，此为一组，每组以逗号隔开，仅设置要转换的内容，不需要转换的不填写。
#winlog为数据库中的日志类型  winlogbeat为es中的日志类型，都需要进行前端对应，类似的还有packet  metric
logTypeToWeb=syslog:syslog,winlog:winlog(日志),winlogbeat:winlog(日志),packet:packet(流量),packetbeat:packet(流量),metric:metric(指标),metricbeat:metric(指标),file:file(文件),dns:dns,dhcp:dhcp
#前端不同页面，针对日志类型的下拉框，锁需要加载的日志类型不同，分别进行配置  格式“日志类型key：下拉框显示的内容”，每组以逗号隔开
#资产概览页面，涉及全部日志类型，仅涉及到数据库层面，因此key为资产的日志类型
logTypeEquipment=syslog:syslog,winlog:winlog(日志),packet:packet(流量),metric:metric(指标),file:file(文件),mysql:mysql(数据库),dns:dns,dhcp:dhcp
#精确查询页面
logTypeSearch=syslog:syslog,winlogbeat:winlog(日志),dns:dns,dhcp:dhcp
#事件关联查询页面
logTypeEvent=syslog:syslog,winlogbeat:winlog(日志)

#日志类型与日志级别的联动，主要是windows日志，由于采用beat获取，在beat中日志级别为中文，需要与syslog的英文对应，目前仅对应了三个级别
logLevel_Syslog=emergency,alert,critical,error,warning,notice,information,debug
logLevel_winlog=error,warning,information
logLevel_DNS=emergency,alert,critical,error,warning,notice,information,debug
logLevel_DHCP=emergency,alert,critical,error,warning,notice,information,debug

#不同日志级别对应的table的列，每组数据以“;”分隔，一组数据中 以逗号隔开 对应tableHead属性中的  prop,label,width
tableHead_syslog=@timestamp,时间,150;log.level,级别,100;agent.type,日志类型,100;fields.ip,IP,125;message,日志内容,"
tableHead_winlog=@timestamp,时间,150;log.level,级别,100;agent.type,日志类型,100;fields.ip,IP,125;message,日志内容,"
tableHead_packet=
tableHead_metric=
tableHead_file=@timestamp,时间,150;agent.type,日志类型,100;fields.ip,IP,125;message,日志内容,"
tableHead_mysql=
tableHead_dns=@timestamp,时间,150;log.level,级别,100;agent.type,日志类型,100;fields.ip,IP,125;message,日志内容,"
tableHead_dhcp=@timestamp,时间,150;log.level,级别,100;agent.type,日志类型,100;fields.ip,IP,125;message,日志内容,"
#不同日志界别对应的form表单信息
formDetails_syslog={"@timestamp":"时间"},{"log.level":"级别"},{"agent.type":"日志类型"},{"fields.equipmentname":"资产名称"},{"fields.ip":"IP"},{"message":"日志内容"}
formDetails_winlog={"@timestamp":"时间"},{"log.level":"级别"},{"agent.type":"日志类型"},{"fields.equipmentname":"资产名称"},{"fields.ip":"IP"},{"message":"日志内容"}
formDetails_packet=
formDetails_metric=
formDetails_file={"@timestamp":"时间"},{"agent.type":"日志类型"},{"fields.equipmentname":"资产名称"},{"fields.ip":"IP"},{"message":"日志内容"}
formDetails_mysql={"@timestamp":"时间"},{"agent.type":"日志类型"},{"fields.equipmentname":"资产名称"},{"fields.ip":"资产IP"},{"user":"数据库账号"},{"cmd":"操作类型"},{"query":"SQL语句"},{"rows":"影响行数"},{"status":"执行状态码"}
formDetails_dns={"@timestamp":"时间"},{"log.level":"级别"},{"agent.type":"日志类型"},{"fields.equipmentname":"资产名称"},{"fields.ip":"IP"},{"message":"日志内容"}
formDetails_dhcp={"@timestamp":"时间"},{"log.level":"级别"},{"agent.type":"日志类型"},{"fields.equipmentname":"资产名称"},{"fields.ip":"IP"},{"message":"日志内容"}
#特殊 上面是与日志界别相对应，这部分是仅针对事件模块的日志详情页
formDetails_event={"@timestamp":"时间"},{"event.action":"事件名称"},{"winlog.task":"事件类型"},{"fields.ip":"客体/目的IP"},{"agent.type": "日志类型"},{"fields.equipmentname":"资产名称"},{"winlog":"事件原因"},{"message":"日志内容"}

##日志类型key值定义，注意：该值如要修改过增加，需要调整上面的配置项
##同时还要注意equipmentVisual.json文件中的内容，该文件是用来根据资产的日志类型显示相应报表的
##这组值主要用在kafka数据入库时的日志类型标签
logType_syslog=syslog
logType_winlog=winlogbeat
logType_metric=metricbeat
logType_packet=packetbeat
logType_file=file
logType_mysql=mysql
logType_dns=dns
logType_dhcp=dhcp